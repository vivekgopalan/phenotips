<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/
-->

<xwikidoc version="1.1">
  <web>PhenoTips</web>
  <name>PedigreeMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1401822196000</creationDate>
  <parent>PhenoTips.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1416436259000</date>
  <contentUpdateDate>1416436259000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#macro(pedigreeThumbnail $family $patientId)
  #set ($canEditP = $hasEdit &amp;&amp; !$isReadOnly)
  #set ($hasFamily = $family &amp;&amp; "$family.id" != '')
##
  #if ($hasFamily &amp;&amp; $family.pedigree)
    ## get desired thumbnail size from configuration
    #set($config = $!{xwiki.getDocument('XWiki.XWikiPreferences').getObject('PhenoTips.PedigreeGlobalSettings')})##
    #set($previewSize = "$!{config.getProperty('pedigreePreviewSize').value}")##
    #if ($previewSize == "medium")##
      #set($size = 400)##
    #elseif ($previewSize == "large")##
      #set($size = 600)##
    #else
      #set($size = 200)##
    #end
    #set ($image = $family.pedigree.getImage($patientId, $size, $size))
  #end## pedigree obj exists
##
  #if ($xcontext.action == 'edit' || "$!image" != '')
    $xwiki.ssx.use('PhenoTips.PedigreeMacros')##
    $xwiki.ssx.use('PhenoTips.FontAwesomeIcons')##
    $xwiki.ssfx.use('icons/font-awesome/css/font-awesome.min.css')##
    $xwiki.jsx.use('PhenoTips.PedigreeMacros')##
    #if ($patientId)
      $xwiki.ssx.use('PhenoTips.FamilySelector')##
      $xwiki.jsx.use('PhenoTips.FamilySelector')##
      #set ($docIdRequest = 'id=')
    #else
      #set ($docIdRequest = 'fid=')
    #end
    #if ("$!image" != '')
      #set ($familyInfo = $services.families.getFamilyInfo($family.id))
      #set ($pDelete = "$services.localization.render('phenotips.patientRecord.pedigree.delete')")
      #set ($pPrint = "$services.localization.render('phenotips.patientRecord.pedigree.print')")
      #set ($pDownload = "$services.localization.render('phenotips.patientRecord.pedigree.download')")
      #if ($hasFamily &amp;&amp; "$family.getWarningMessage()" != "")
        #set ($pAction = "$services.localization.render('phenotips.patientRecord.pedigree.open')")
        #set ($pClass = 'open')
        #set ($pContent = $pAction)
      #else
        #set ($pAction = "$services.localization.render('phenotips.patientRecord.pedigree.edit')")
        #set ($pClass = '')
        #set ($pContent = $!image)
      #end
    #else
      #set ($pAction = "$services.localization.render('phenotips.patientRecord.pedigree.draw')")
      #set ($pClass = 'draw')
      #set ($pContent = $pAction)
    #end
    (% class="pedigree-wrapper" %)((({{html clean="false"}}
    &lt;input type="hidden" id="familyIdentifier" value="$!{family.getId()}" /&gt;
    &lt;div id="pedigree-thumbnail" class="pedigree-box ${pClass} #if($canEditP)pedigree-edit-trigger#end" title="${pAction}" &gt;${pContent}&lt;/div&gt;
 ##
    #if ("$!image" != '')
      &lt;div class="pedigree-buttons" id="pedigree-buttons"&gt;
      #if($canEditP)
        &lt;div class="buttonwrapper pedigree-button p-edit"&gt;
          &lt;a class="action-edit fa fa-pencil edit-pedegree button secondary pedigree-edit-trigger" href="#" title="${pAction}"&gt;&lt;/a&gt;
        &lt;/div&gt;
        #if($patientId)
        &lt;div class="buttonwrapper pedigree-button p-delete"&gt;
          &lt;a class="action-delete fa fa-remove delete-pedegree button secondary" href="" title="${pDelete}" id="pedigree-delete"&gt;&lt;/a&gt;
        &lt;/div&gt;
        #end
      #end
      ##&lt;div class="buttonwrapper pedigree-button p-print"&gt;
      ##  &lt;a class="action-print fa fa-print print-pedegree button secondary" href="#" title="${pPrint}"&gt;&lt;/a&gt;
      ##&lt;/div&gt;
      &lt;div class="pedigree-button p-export"&gt;
        &lt;span class="buttonwrapper"&gt;&lt;a class="action-download fa fa-download download-pedegree button secondary" id="pedigree-export-button" href="#" title="${pDownload}"&gt;&lt;/a&gt;&lt;/span&gt;
        &lt;ul id="pedigree-export-buttons"&gt;
          &lt;li&gt;&lt;a href='$xwiki.getDocument("PhenoTips","PedigreeImageService").getURL("get", "${docIdRequest}$doc.getName()&amp;format=raster")' target="_blank"&gt;$services.localization.render('phenotips.patientRecord.pedigree.download.png')&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href='$xwiki.getDocument("PhenoTips","PedigreeImageService").getURL("get", "${docIdRequest}$doc.getName()")' target="_blank"&gt;$services.localization.render('phenotips.patientRecord.pedigree.download.svg')&lt;/a&gt;&lt;/li&gt;
          ##&lt;li&gt;&lt;a href="#" target="_blank"&gt;PDF&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    #end
    {{/html}})))
  #end
#end
#**
 * Macro which produces HTML for pedigree legend
 *#
#macro(pedigreeLegend $pedigreeData $header)
  #set ($pedigreeDataJSON = $jsontool.parse($pedigreeData))
  #set ($disorderColors = $pedigreeDataJSON.settings.colors.disorders)
  #set ($candidateGeneColors = $pedigreeDataJSON.settings.colors.candidateGenes)
  #set ($causalGeneColors = $pedigreeDataJSON.settings.colors.causalGenes)
  #set ($cancerColors = $pedigreeDataJSON.settings.colors.cancers)

  #if (($disorderColors &amp;&amp; $disorderColors.size() &gt; 0) ||
       ($candidateGeneColors &amp;&amp; $candidateGeneColors.size() &gt; 0) ||
       ($causalGeneColors &amp;&amp; $causalGeneColors.size() &gt; 0) ||
       ($cancerColors &amp;&amp; $cancerColors.size() &gt; 0))
    #if ($xcontext.action == 'export')
      #set ($circle = 'â¬¤')
      #set ($listyle = 'margin: 0 .5em 0 0; font-family: FreeSerif, serif;')
    #else
      #set ($circle = '&lt;span class="fa fa-circle fa-lg"&gt;&lt;/span&gt;')
      #set ($listyle = 'margin: 0 .25em 0 0;')
    #end

    #set ($divstyle="")
    #if ($header)
      &lt;strong&gt;$header&lt;/strong&gt;
      #set ($divstyle="margin-top: 1em; margin-left: 2em;")
    #end
    &lt;div class="pedigree-legend" style="$divstyle"&gt;
    #set ($disorderNames = $pedigreeDataJSON.settings.names.disorders)
    #if ($disorderColors &amp;&amp; $disorderNames &amp;&amp; $disorderColors.size() &gt; 0)
      Disorders:
      &lt;ul class="pedigree-legend-list" style="margin-top: .4em; margin-bottom: .5em;"&gt;
      #foreach ($color in $disorderColors.entrySet())
        &lt;li class="pedigree-disorder-item" style="list-style-type: none;"&gt;
          &lt;span class="pedigree-disorder-color" style="color: $color.value; $listyle"&gt;$circle&lt;/span&gt;
          &lt;span class="pedigree-disorder-name"&gt;$escapetool.xml($disorderNames[$color.key])&lt;/span&gt;
        &lt;/li&gt;
      #end
      &lt;/ul&gt;
    #end
    #set ($causalGeneNames = $pedigreeDataJSON.settings.names.causalGenes)
    #if ($causalGeneColors &amp;&amp; $causalGeneNames &amp;&amp; $causalGeneColors.size() &gt; 0)
      Causal Genes:
      &lt;ul class="pedigree-legend-list" style="margin-top: .4em"&gt;
      #foreach ($color in $causalGeneColors.entrySet())
        &lt;li class="pedigree-disorder-item" style="list-style-type: none;"&gt;
          &lt;span class="pedigree-disorder-color" style="color: $color.value; $listyle"&gt;$circle&lt;/span&gt;
          &lt;span class="pedigree-disorder-name"&gt;$escapetool.xml($causalGeneNames[$color.key])&lt;/span&gt;
        &lt;/li&gt;
      #end
      &lt;/ul&gt;
    #end
    #set ($candidateGeneNames = $pedigreeDataJSON.settings.names.candidateGenes)
    #if ($candidateGeneColors &amp;&amp; $candidateGeneNames &amp;&amp; $candidateGeneColors.size() &gt; 0)
      Candidate Genes:
      &lt;ul class="pedigree-legend-list" style="margin-top: .4em"&gt;
      #foreach ($color in $candidateGeneColors.entrySet())
        &lt;li class="pedigree-disorder-item" style="list-style-type: none;"&gt;
          &lt;span class="pedigree-disorder-color" style="color: $color.value; $listyle"&gt;$circle&lt;/span&gt;
          &lt;span class="pedigree-disorder-name"&gt;$escapetool.xml($candidateGeneNames[$color.key])&lt;/span&gt;
        &lt;/li&gt;
      #end
      &lt;/ul&gt;
    #end
    #if ($cancerColors &amp;&amp; $cancerColors.size() &gt; 0)
      Cancers:
      &lt;ul class="pedigree-legend-list" style="margin-top: .4em"&gt;
      #foreach ($color in $cancerColors.entrySet())
        &lt;li class="pedigree-disorder-item" style="list-style-type: none;"&gt;
          &lt;span class="pedigree-disorder-color" style="color: $color.value; $listyle"&gt;$circle&lt;/span&gt;
          &lt;span class="pedigree-disorder-name"&gt;$color.key&lt;/span&gt;
        &lt;/li&gt;
      #end
      &lt;/ul&gt;
    #end


    &lt;/div&gt;
  #end
#end
{{/velocity}}</content>
  <object>
    <name>PhenoTips.PedigreeMacros</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>73eb652d-c3ef-4c20-8707-9d1b65a96316</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>(function() {
  var init = function() {

    if (PhenoTips.widgets.FamilySelector) {
      // only needed and available on patient page
      this.familySelector = new PhenoTips.widgets.FamilySelector();
    }
    _this = this;

    // Save before opening the pedigree
    // TODO: check if there is anything to save
    var pedigreeTrigger = $$('.pedigree-edit-trigger');
    var openPedigreeEditor = function() {
      var familyReference = $('familyIdentifier');
      if (XWiki.currentDocument.space == 'data') {
        if (familyReference &amp;&amp; familyReference.value != '') {
          var familyURL = (new XWiki.Document(familyReference.value, 'Families')).getURL();
          window.self.location = XWiki.currentDocument.getURL('cancel', 'xredirect=' + encodeURIComponent(familyURL + '?sheet=PhenoTips.PedigreeEditor&amp;patient_id=' + XWiki.currentDocument.page + '&amp;action=' + XWiki.contextaction));
        } else {
          _this.familySelector.show();
        }
      } else {
        window.self.location.search = '?sheet=PhenoTips.PedigreeEditor&amp;action=' + XWiki.contextaction;
      }
    }

    if (pedigreeTrigger) {
      pedigreeTrigger.invoke('observe', 'click', function(event) {
        PhenoTips.widgets.FormUtils.getFormState().saveIfFormDirty(openPedigreeEditor);
      });
    }

    var familyInterfaceDoc = new XWiki.Document('FamilyPedigreeInterface', 'PhenoTips');
    var baseUrl = familyInterfaceDoc.getURL('get', 'rand='+ Math.random());

    // Delete Pedigree functionality for Patient Form
    if (XWiki.currentDocument.space == 'data') {

      var pedigreeDelete = $("pedigree-delete");
      if (pedigreeDelete) {
        pedigreeDelete.observe("click", function(event) {
          event.stop();
          var familyID = $('familyIdentifier').value;
          var fullURL = baseUrl + '&amp;action=familyinfo&amp;document_id=' + familyID;
          new Ajax.Request(fullURL, {
            method: "POST",
            onSuccess: onFamilyDataReadyBeforeDeletion.bind(this)
          });
        });
      }

      var onFamilyDataReadyBeforeDeletion = function (response) {
        if (response &amp;&amp; response.responseJSON) {

          var familyMembers = response.responseJSON.family.hasOwnProperty("familyMembers") ? response.responseJSON.family.familyMembers: [];
          var familyId = response.responseJSON.family.id;
          var familyExternalId = response.responseJSON.family.externalId;

          var dialogParameters = { showCancelButton: false };
          dialogParameters.confirmationText = "$services.localization.render('phenotips.patientRecord.pedigree.deleteWarning')";

          var constructDialog = function(dialogParameters, canDeleteFamily) {
            var confirmationDialog = new XWiki.widgets.ConfirmationBox(
              {
                onYes : function() {
                  var parameters = {"action": "removepatient", "patient_id": XWiki.currentDocument.page};
                  PhenoTips.widgets.FormUtils.getFormState().saveIfFormDirty(function () {
                    sendDeleteRequest(parameters);
                  });
                },
                onNo : function() { }
              },
              dialogParameters
            );

            // if user has rights to delete family, add one more button
            if (canDeleteFamily) {
              var deleteFamilyButton = new Element("input", {
                "type": "button",
                "value": "$escapetool.javascript($services.localization.render('phenotips.patientRecord.pedigree.deleteFamily'))",
                "class": "button  delete-family",
                "id": "delete_family"
              });
              var deletePedigreeButton = $$('input:[type=button][title="(Enter)"]')[0];
              deletePedigreeButton.addClassName('delete-family');
              deletePedigreeButton.up().insert({'after' : (deleteFamilyButton.wrap('span', {'class' : 'buttonwrapper'}))});

              deleteFamilyButton.observe("click", function(event) {
                event.stop();
                confirmationDialog.closeDialog();
                var parameters = {"action": "deletefamily", "removemembers": false, "family_id": familyId, "form_token": $$('meta[name=form_token]')[0].content};
                 sendDeleteRequest(parameters);
              });
            }
          }

          if (familyMembers.length &gt; 1) {
            // remove patient from family
            constructDialog(dialogParameters);
          } else {
            // if this is the last patient check if the user has delete rights to delete family
            new Ajax.Request(baseUrl, {
                method: "POST",
                parameters: {'action': 'candeletefamily', 'family_id' : familyId, 'deleteallmembers' : false},
                onSuccess: function(response) {
                  if (response &amp;&amp; response.responseJSON) {
                    // remove patient from family OR delete family dialog
                    var familyString = (familyExternalId == "") ? familyId + " " : familyExternalId + " (" + familyId + ") ";
                    dialogParameters.confirmationText = "$services.localization.render('phenotips.patientRecord.pedigree.deleteWarning')" + "&lt;br&gt;&lt;br&gt;" +
                                                        "$services.localization.render('phenotips.patientRecord.pedigree.deleteFamilyWarning')" + " " + familyString + ". " +
                                                        "$services.localization.render('phenotips.patientRecord.pedigree.deleteFamilyWarningQuestion')" +  "&lt;br&gt;&lt;br&gt;";
                    dialogParameters.yesButtonText = "$services.localization.render('phenotips.patientRecord.pedigree.delete')";
                    dialogParameters.noButtonText = "$services.localization.render('phenotips.patientRecord.deleteWarning.cancelButton')";
                    constructDialog(dialogParameters, true);
                  } else {
                    constructDialog(dialogParameters);
                  }
                }
            });
          }

          var sendDeleteRequest = function(parameters) {
            new Ajax.Request(baseUrl, {
              method: "POST",
              parameters: parameters,
              onSuccess: function(response) {
                if (response) {
                  var pedigreeThumnail = $('pedigree-thumbnail');
                  pedigreeThumnail.title = "$services.localization.render('phenotips.patientRecord.pedigree.draw')";
                  pedigreeThumnail.innerHTML = pedigreeThumnail.title;
                  pedigreeThumnail.addClassName('draw');
                  $('familyId').up().remove();
                  $('familyIdentifier').value='';
                  $('pedigree-buttons').remove();
                }
              }
            });
          }
        }
      }
    }
  };
  (XWiki.domIsLoaded &amp;&amp; init()) || document.observe("xwiki:dom:loaded", init);
})();</code>
    </property>
    <property>
      <name>Save the patient record before loading the Pedigree Editor</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>PhenoTips.PedigreeMacros</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>d8073156-75cb-40ec-ad3e-30240a28b83a</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.pedigree-box {
  min-height: 200px;
  min-width: 200px;
  border-style: solid;
  border-width: 1px;
  border-color: #636b75;
  margin-top: 10px;
  cursor: default;
  display: inline-block;
}
.pedigree-box.draw {
  border-style: dashed;
  color: #ccc;
}
.pedigree-box.open {
  background: url("$xwiki.getDocument('PhenoTips.UIX_Field__pedigree').getAttachmentURL('open-pedigree-censored.jpg')");
  background-size: 200px 200px;
  color :#636b75;
}
.pedigree-box.draw, .pedigree-box.open {
  text-align: center;
  font-size: x-large;
  line-height: 190px;
}
.pedigree-box.draw:hover, .pedigree-box.open:hover {
  color: #2173AF;
}
.pedigree-button {
  display: inherit !important;
}
.pedigree-button.p-edit, .pedigree-button.p-print, .pedigree-button.p-delete {
  margin: 5px 5px 0 5px;
}
.pedigree-button.p-export {
  margin: 5px 0 0 5px;
}
.pedigree-buttons {
  display: inline-block;
  vertical-align: top;
  padding-top: 5px;
  max-width: 40px;
}
.pedigree-button li {
  list-style-type: none;
  padding: .2em 1.3em;
  cursor: default;
  line-height: 16px;
  min-height: 16px;
}
.pedigree-button ul {
  background: none repeat scroll 0 0 #0272a6;
  border-radius: 0 0 .8em .8em;
  box-shadow: 0 1px 1px #e8e8e8;
  margin: 0 0 0 0.1em;
  padding-bottom: .3em;
  position: absolute;
  z-index: 1000;
  background-color: #E1E1E1;
  background-image: linear-gradient(to bottom, #FFFFFF 0%, #E1E1E1 100%);
  border-color: #E1E1E1;
  border-radius: 3px 3px 3px 3px;
  color: #4D5860;
  text-shadow: 0 1px 0 #FFFFFF;
}
.p-export ul {
  display:none;
}
.p-export ul:hover, .p-export:hover ul {
  display:block;
}
.action-download.download-pedegree:after{
  content: '\25BC';
  font-size: .8em;
  margin-left: .5em;
}
.xdialog-box .button.delete-family {
  width: inherit;
  margin-right: 10px;
}
.pedigree-edit-trigger {
  cursor: pointer;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
